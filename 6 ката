r="abcdeaB"
r=r.lower()
z=[]
for i in r.lower():
    if r.count(i)>1:
        z.append((i))
print(len((set(z))))
    
    
    def solution(s):
    result = []
    if len(s) % 2:
        s += '_'
    for i in range(0, len(s), 2):
        result.append(s[i:i+2])
    return result
    
    def move_zeros(lst):
    s=[]
    d=[]
    for i in lst:
        if i!=0:
            s.append(i)
        if i==0:
            d.append(i)
    return(s+d)
   
   def find_outlier(integers):
    x=[]
    o=[]
    for i in integers:
        if i%2==0:
            x.append(i)
        elif i%2!=0:
            o.append(i)
    if len(o)<len(x):
        return(o[0])
    elif  len(o)>len(x):
        return(x[0])
        
        def narcissistic( value ):
    value=str(value)
    z=[]
    for i in value:
        k=int(i)**len(value)
        z.append(k)
    if (sum(z))==int(value):
        return(True)
    else: return False
